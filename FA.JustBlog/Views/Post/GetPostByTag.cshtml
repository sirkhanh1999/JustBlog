@using Common;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model IEnumerable<Model.Post.PostViewModel>
@{
    var tagName = ViewData["Tag"];
}

<h2>Tag: <span style="text-decoration: underline">@tagName</span></h2>
<hr class="my-4" />
@{
    if (Model != null)
    {
        @foreach (var item in Model)
        {
            <!-- Post preview-->
            <div class="post-preview">
                <a href="@Url.Action("DetailsByUrl", "Post"
                , new{year = @item.PostedOn.Year, month = @item.PostedOn.Month.ToString("00"), urlSlug = @item.UrlSlug} )">
                    <h3 class="post-title">@item.Title</h3>
                </a>
                <div class="post-meta">
                    Posted @PostedOnDisplayHelper.FrientlyDate(item.PostedOn) with rate @item.Rate by @item.ViewCount view(s)
                </div>
                <div>@item.ShortDescription</div>
                <div>
                    <span >Category</span>
                    <a href="@Url.Action("GetPostByCategory", "Post", new{category = @item.Category.Replace(" ", "-")} )" style="text-decoration: underline">@item.Category</a>
                </div>
                <div class="mt-3 mb-4">
                    <span>Tag: </span>
                    @foreach (var tag in item.TagsName)
                    {
                        <a href="@Url.Action("GetPostByTag", "Post", new{tag = @tag.TagName.Replace(" ", "-")} )" class="popular-tag" style="">@tag.TagName</a>
                    }
                </div>
            </div>
            <!-- Divider-->
            <hr class="my-4" />

        }
        <div class="pull-right">
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("GetPostByTag", new {page}), new PagedListRenderOptions
            {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
            LinkToPreviousPageFormat = "Previous",
            LinkToNextPageFormat = "Next",
            //LinkToFirstPageFormat = "Trang Đầu",
            //LinkToLastPageFormat = "Trang Cuối",
            Display = PagedListDisplayMode.IfNeeded,

            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always
            })
        </div>
    }
}



